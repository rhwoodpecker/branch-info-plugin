!function(t,e){if("object"==typeof exports&&"object"==typeof module)module.exports=e();else if("function"==typeof define&&define.amd)define([],e);else{var n=e();for(var o in n)("object"==typeof exports?exports:t)[o]=n[o]}}(this,(()=>(()=>{"use strict";var t={303:t=>{t.exports=require("child_process")},231:t=>{t.exports=require("fs")},423:t=>{t.exports=require("path")}},e={};function n(o){var r=e[o];if(void 0!==r)return r.exports;var c=e[o]={exports:{}};return t[o](c,c.exports,n),c.exports}n.d=(t,e)=>{for(var o in e)n.o(e,o)&&!n.o(t,o)&&Object.defineProperty(t,o,{enumerable:!0,get:e[o]})},n.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),n.r=t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})};var o={};return(()=>{n.r(o),n.d(o,{BranchWebpackPlugin:()=>a,vitePluginGitInfo:()=>i});var t=n(423),e=n(231),r=n(303).execSync;function c(){var t=r("git name-rev --name-only HEAD").toString().trim(),e=r("git show -s --format=%H").toString().trim(),n=r("git show -s --format=%cn").toString().trim(),o=function(t){var e=t.getFullYear(),n=t.getMonth()+1<10?"0".concat(t.getMonth()+1):t.getMonth()+1,o=t.getDate()<10?"0".concat(t.getDate()):t.getDate(),r=t.getHours()<10?"0".concat(t.getHours()):t.getHours(),c=t.getMinutes()<10?"0".concat(t.getMinutes()):t.getMinutes(),i=t.getSeconds()<10?"0".concat(t.getSeconds()):t.getSeconds();return"".concat(e,"-").concat(n,"-").concat(o," ").concat(r,":").concat(c,":").concat(i)}(new Date(r("git show -s --format=%cd").toString())),c=r("git show -s --format=%s").toString().trim();return"\n    当前分支名：".concat(t,"\n\n    提交的hash：").concat(e,"\n\n    提交人姓名：").concat(n,"\n\n    提交日期：").concat(o,"\n\n    提交描述：").concat(c,"\n  ")}function i(){var n;return{name:"vite-plugin-git-info",configResolved:function(t){n=t.build.outDir},closeBundle:function(){var o=c();e.writeFile(t.join(n,"build.txt"),o,(function(t){if(t)throw t;console.log("Git info saved to ".concat(n,"/build.txt"))}))}}}var a=function(){function t(){console.log("BranchWebpackPlugin init")}return t.prototype.apply=function(t){t.hooks.emit.tapAsync("BranchWebpackPlugin",(function(t,e){var n=c();t.assets["build.txt"]={source:function(){return n},size:function(){return n.length}},e()}))},t}()})(),o})()));